INICIO -> ACOES
ACOES -> ACOES_A ACOES_B
ACOES -> ACOES_B
ACOES -> ''
ACOES_A -> DECLARACAO
ACOES_A -> ATRIBUICAO
ACOES_A -> ESTRUTURA
ACOES_A -> ESTRUTURA_CONDICIONAL_OU_REPETICAO
ACOES_A -> EXPRESSAO
ACOES_B -> \n ACOES
TIPO_DE_DADO -> TIPO_DE_DADO_A
TIPO_DE_DADO -> [ TIPO_DE_DADO ]
TIPO_DE_DADO_A -> int
TIPO_DE_DADO_A -> real
TIPO_DE_DADO_A -> texto
TIPO_DE_DADO_A -> logico
TIPO_DE_DADO_A -> estrutura identificador
DECLARACAO -> var identificador DECLARACAO_A
DECLARACAO_A -> , identificador DECLARACAO_A
DECLARACAO_A -> DECLARACAO_B
DECLARACAO_A -> : TIPO_DE_DADO
CHAMADA_DE_FUNCAO -> identificador ( CHAMADA_DE_FUNCAO_A )
CHAMADA_DE_FUNCAO_A -> EXPRESSAO CHAMADA_DE_FUNCAO_B
CHAMADA_DE_FUNCAO_A -> ''
CHAMADA_DE_FUNCAO_B -> , EXPRESSAO CHAMADA_DE_FUNCAO_B
CHAMADA_DE_FUNCAO_B -> ''
INTERVALO -> intervalo INTERVALO_ABERTURA EXPRESSAO , EXPRESSAO INTERVALO_PASSO
INTERVALO_ABERTURA -> (
INTERVALO_ABERTURA -> [
INTERVALO_FECHAMENTO -> )
INTERVALO_FECHAMENTO -> ]
INTERVALO_PASSO -> , EXPRESSAO INTERVALO_FECHAMENTO
INTERVALO_PASSO -> INTERVALO_FECHAMENTO
IDENTIFICADOR -> identificador IDENTIFICADOR_A
IDENTIFICADOR_A -> [ EXPRESSAO ] IDENTIFICADOR_A
IDENTIFICADOR_A -> ''
LISTA -> [ LISTA_ELEMENTOS ]
LISTA_ELEMENTOS -> EXPRESSAO LISTA_ELEMENTOS_A
LISTA_ELEMENTOS -> ''
LISTA_ELEMENTOS_A -> , EXPRESSAO LISTA_ELEMENTOS_A
LISTA_ELEMENTOS_A -> ''
EXPRESSAO -> EXPRESSAO ou EXPRESSAO_A
EXPRESSAO -> EXPRESSAO_A
EXPRESSAO_A -> EXPRESSAO_A e EXPRESSAO_B
EXPRESSAO_A -> EXPRESSAO_B
EXPRESSAO_B -> EXPRESSAO_B xou EXPRESSAO_C
EXPRESSAO_B -> EXPRESSAO_C
EXPRESSAO_C -> nao EXPRESSAO_C
EXPRESSAO_C -> EXPRESSAO_D
EXPRESSAO_D -> EXPRESSAO_D COMPARADOR EXPRESSAO_E
EXPRESSAO_D -> EXPRESSAO_E
COMPARADOR -> <=
COMPARADOR -> ==
COMPARADOR -> >=
COMPARADOR -> <
COMPARADOR -> >
COMPARADOR -> <>
EXPRESSAO_E -> EXPRESSAO_E OPERADORES_EXPRESSAO_E EXPRESSAO_F
EXPRESSAO_E -> EXPRESSAO_F
OPERADORES_EXPRESSAO_E -> +
OPERADORES_EXPRESSAO_E -> -
EXPRESSAO_F -> EXPRESSAO_F OPERADORES_EXPRESSAO_F EXPRESSAO_G
EXPRESSAO_F -> EXPRESSAO_G
OPERADORES_EXPRESSAO_F -> *
OPERADORES_EXPRESSAO_F -> /
OPERADORES_EXPRESSAO_F -> %
OPERADORES_EXPRESSAO_F -> //
EXPRESSAO_G -> OPERADORES_EXPRESSAO_G EXPRESSAO_G
EXPRESSAO_G -> EXPRESSAO_H
OPERADORES_EXPRESSAO_G -> +
OPERADORES_EXPRESSAO_G -> -
EXPRESSAO_H -> EXPRESSAO_H ^ EXPRESSAO_I
EXPRESSAO_H -> EXPRESSAO_I
EXPRESSAO_I -> ( EXPRESSAO )
EXPRESSAO_I -> numero
EXPRESSAO_I -> numero_real
EXPRESSAO_I -> string
EXPRESSAO_I -> verdadeiro
EXPRESSAO_I -> falso
EXPRESSAO_I -> IDENTIFICADOR
EXPRESSAO_I -> CHAMADA_DE_FUNCAO
EXPRESSAO_I -> INTERVALO
EXPRESSAO_I -> LISTA
ATRIBUICAO -> identificador ATRIBUIDOR ATRIBUICAO_A
ATRIBUICAO_A -> ATRIBUICAO
ATRIBUICAO_A -> EXPRESSAO
ATRIBUIDOR -> =
ATRIBUIDOR -> +=
ATRIBUIDOR -> -=
ATRIBUIDOR -> *=
ATRIBUIDOR -> /=
ATRIBUIDOR -> //=
ATRIBUIDOR -> %=
ATRIBUIDOR -> ^=
CONDICAO -> EXPRESSAO
SE -> se CONDICAO { \n ACOES } SENAO
SENAO -> senao SENAO_A
SENAO_A -> SE
SENAO_A -> { \n ACOES }
SENAO_A -> ''
COMPARE -> compare EXPRESSAO { \n COMPARE_A }
COMPARE_A -> caso seja EXPRESSAO { \n ACOES } COMPARE_B
COMPARE_B -> caso seja COMPARE_C
COMPARE_B -> \n
COMPARE_C -> EXPRESSAO { \n ACOES } COMPARE_B
COMPARE_C -> diferente { \n ACOES } \n
REPITA_VEZES -> EXPRESSAO vezes { \n ACOES }
REPITA_ENQUANTO -> enquanto CONDICAO { \n ACOES }
REPITA_ACOES_ENQUANTO -> { \n ACOES } enquanto CONDICAO \n
REPITA_ATE -> ate CONDICAO
REPITA_ATE_A -> inclusive REPITA_ATE_B
REPITA_ATE_A -> REPITA_ATE_B
REPITA_ATE_B -> { \n ACOES }
REPITA_ACOES_ATE -> { \n ACOES } ate CONDICAO REPITA_ACOES_ATE_A
REPITA_ACOES_ATE_A -> inclusive
REPITA_ACOES_ATE_A -> ''
REPITA_PARA_CADA -> para cada IDENTIFICADOR REPITA_PARA_CADA_A EXPRESSAO { \n ACOES }
REPITA_PARA_CADA_A -> em
REPITA_PARA_CADA_A -> no
REPITA_PARA_CADA_A -> na
REPITA -> repita REPITA_A
REPITA_A -> REPITA_VEZES
REPITA_A -> REPITA_ENQUANTO
REPITA_A -> REPITA_ACOES_ENQUANTO
REPITA_A -> REPITA_ATE
REPITA_A -> REPITA_ACOES_ATE
REPITA_A -> REPITA_PARA_CADA
ESTRUTURA_CONDICIONAL_OU_REPETICAO -> SE
ESTRUTURA_CONDICIONAL_OU_REPETICAO -> COMPARE
ESTRUTURA_CONDICIONAL_OU_REPETICAO -> REPITA
FUNCAO -> funcao identificador ( FUNCAO_PARAMETROS ) FUNCAO_TIPO_RETORNO { \n ACOES }
FUNCAO_TIPO_RETORNO -> : TIPO_DE_DADO
FUNCAO_TIPO_RETORNO -> ''
FUNCAO_PARAMETROS -> identificador : TIPO_DE_DADO FUNCAO_PARAMETROS_A
FUNCAO_PARAMETROS -> ''
FUNCAO_PARAMETROS_A -> , identificador : TIPO_DE_DADO FUNCAO_PARAMETROS_A
FUNCAO_PARAMETROS_A -> ''
ESTRUTURA -> estrutura identificador { \n ESTRUTURA_A }
ESTRUTURA_A -> DECLARACAO \n ESTRUTURA_B
ESTRUTURA_B -> DECLARACAO \n ESTRUTURA_B
ESTRUTURA_B -> ''
