/**
 * generated by Xtext 2.16.0
 */
package org.xtext.coral.portugolcoral.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.xtext.coral.portugolcoral.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.coral.portugolcoral.PortugolcoralPackage
 * @generated
 */
public class PortugolcoralAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static PortugolcoralPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PortugolcoralAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = PortugolcoralPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PortugolcoralSwitch<Adapter> modelSwitch =
    new PortugolcoralSwitch<Adapter>()
    {
      @Override
      public Adapter casePortugolcoral(Portugolcoral object)
      {
        return createPortugolcoralAdapter();
      }
      @Override
      public Adapter caseAcoes(Acoes object)
      {
        return createAcoesAdapter();
      }
      @Override
      public Adapter caseDeclararVariaveis(DeclararVariaveis object)
      {
        return createDeclararVariaveisAdapter();
      }
      @Override
      public Adapter caseDeclararVariaveisTipo(DeclararVariaveisTipo object)
      {
        return createDeclararVariaveisTipoAdapter();
      }
      @Override
      public Adapter caseAtribuir(Atribuir object)
      {
        return createAtribuirAdapter();
      }
      @Override
      public Adapter caseExpressao(Expressao object)
      {
        return createExpressaoAdapter();
      }
      @Override
      public Adapter caseNao(Nao object)
      {
        return createNaoAdapter();
      }
      @Override
      public Adapter caseSinal(Sinal object)
      {
        return createSinalAdapter();
      }
      @Override
      public Adapter caseElementoParenteses(ElementoParenteses object)
      {
        return createElementoParentesesAdapter();
      }
      @Override
      public Adapter caseParenteses(Parenteses object)
      {
        return createParentesesAdapter();
      }
      @Override
      public Adapter caseMatriz(Matriz object)
      {
        return createMatrizAdapter();
      }
      @Override
      public Adapter casePosicaoMatriz(PosicaoMatriz object)
      {
        return createPosicaoMatrizAdapter();
      }
      @Override
      public Adapter caseOu(Ou object)
      {
        return createOuAdapter();
      }
      @Override
      public Adapter caseE(E object)
      {
        return createEAdapter();
      }
      @Override
      public Adapter caseXou(Xou object)
      {
        return createXouAdapter();
      }
      @Override
      public Adapter caseComparacao(Comparacao object)
      {
        return createComparacaoAdapter();
      }
      @Override
      public Adapter caseAdicaoOuSubtracao(AdicaoOuSubtracao object)
      {
        return createAdicaoOuSubtracaoAdapter();
      }
      @Override
      public Adapter caseMultiplicacaoOuDivisao(MultiplicacaoOuDivisao object)
      {
        return createMultiplicacaoOuDivisaoAdapter();
      }
      @Override
      public Adapter caseExponenciacao(Exponenciacao object)
      {
        return createExponenciacaoAdapter();
      }
      @Override
      public Adapter caseConstanteInteira(ConstanteInteira object)
      {
        return createConstanteInteiraAdapter();
      }
      @Override
      public Adapter caseConstanteReal(ConstanteReal object)
      {
        return createConstanteRealAdapter();
      }
      @Override
      public Adapter caseConstanteString(ConstanteString object)
      {
        return createConstanteStringAdapter();
      }
      @Override
      public Adapter caseReferenciaVariavel(ReferenciaVariavel object)
      {
        return createReferenciaVariavelAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Portugolcoral <em>Portugolcoral</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Portugolcoral
   * @generated
   */
  public Adapter createPortugolcoralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Acoes <em>Acoes</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Acoes
   * @generated
   */
  public Adapter createAcoesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.DeclararVariaveis <em>Declarar Variaveis</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.DeclararVariaveis
   * @generated
   */
  public Adapter createDeclararVariaveisAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.DeclararVariaveisTipo <em>Declarar Variaveis Tipo</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.DeclararVariaveisTipo
   * @generated
   */
  public Adapter createDeclararVariaveisTipoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Atribuir <em>Atribuir</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Atribuir
   * @generated
   */
  public Adapter createAtribuirAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Expressao <em>Expressao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Expressao
   * @generated
   */
  public Adapter createExpressaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Nao <em>Nao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Nao
   * @generated
   */
  public Adapter createNaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Sinal <em>Sinal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Sinal
   * @generated
   */
  public Adapter createSinalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.ElementoParenteses <em>Elemento Parenteses</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.ElementoParenteses
   * @generated
   */
  public Adapter createElementoParentesesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Parenteses <em>Parenteses</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Parenteses
   * @generated
   */
  public Adapter createParentesesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Matriz <em>Matriz</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Matriz
   * @generated
   */
  public Adapter createMatrizAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.PosicaoMatriz <em>Posicao Matriz</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.PosicaoMatriz
   * @generated
   */
  public Adapter createPosicaoMatrizAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Ou <em>Ou</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Ou
   * @generated
   */
  public Adapter createOuAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.E <em>E</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.E
   * @generated
   */
  public Adapter createEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Xou <em>Xou</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Xou
   * @generated
   */
  public Adapter createXouAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Comparacao <em>Comparacao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Comparacao
   * @generated
   */
  public Adapter createComparacaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.AdicaoOuSubtracao <em>Adicao Ou Subtracao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.AdicaoOuSubtracao
   * @generated
   */
  public Adapter createAdicaoOuSubtracaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.MultiplicacaoOuDivisao <em>Multiplicacao Ou Divisao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.MultiplicacaoOuDivisao
   * @generated
   */
  public Adapter createMultiplicacaoOuDivisaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.Exponenciacao <em>Exponenciacao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.Exponenciacao
   * @generated
   */
  public Adapter createExponenciacaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.ConstanteInteira <em>Constante Inteira</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.ConstanteInteira
   * @generated
   */
  public Adapter createConstanteInteiraAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.ConstanteReal <em>Constante Real</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.ConstanteReal
   * @generated
   */
  public Adapter createConstanteRealAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.ConstanteString <em>Constante String</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.ConstanteString
   * @generated
   */
  public Adapter createConstanteStringAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.coral.portugolcoral.ReferenciaVariavel <em>Referencia Variavel</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.coral.portugolcoral.ReferenciaVariavel
   * @generated
   */
  public Adapter createReferenciaVariavelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //PortugolcoralAdapterFactory
